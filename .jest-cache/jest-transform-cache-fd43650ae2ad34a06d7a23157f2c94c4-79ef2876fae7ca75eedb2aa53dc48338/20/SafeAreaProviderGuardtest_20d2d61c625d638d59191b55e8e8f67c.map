{"version":3,"names":["_react","_interopRequireDefault","require","_reactTestRenderer","_reactNative","_SafeAreaProviderGuard","_jsxRuntime","Child","React","createElement","describe","originalGetConfig","UIManager","getViewManagerConfig","afterEach","jest","restoreAllMocks","test","fn","warnSpy","spyOn","global","console","mockImplementation","renderer","ReactTestRenderer","create","jsx","default","children","tree","toJSON","expect","toBeTruthy","toHaveBeenCalled","name","not"],"sources":["SafeAreaProviderGuard.test.tsx"],"sourcesContent":["import React from 'react';\r\nimport ReactTestRenderer from 'react-test-renderer';\r\nimport { UIManager } from 'react-native';\r\nimport SafeAreaProviderGuard from '../SafeAreaProviderGuard';\r\n\r\nconst Child = () => React.createElement('Child');\r\n\r\ndescribe('SafeAreaProviderGuard', () => {\r\n  const originalGetConfig = (UIManager as any).getViewManagerConfig;\r\n\r\n  afterEach(() => {\r\n    (UIManager as any).getViewManagerConfig = originalGetConfig;\r\n    jest.restoreAllMocks();\r\n  });\r\n\r\n  test('falls back to View when RNCSafeAreaProvider is missing', () => {\r\n    (UIManager as any).getViewManagerConfig = jest.fn(() => null);\r\n    const warnSpy = jest.spyOn(global.console, 'warn').mockImplementation(() => {});\r\n\r\n    const renderer = ReactTestRenderer.create(\r\n      <SafeAreaProviderGuard>\r\n        <Child />\r\n      </SafeAreaProviderGuard>\r\n    );\r\n\r\n    const tree = renderer.toJSON();\r\n    expect(tree).toBeTruthy();\r\n    expect(warnSpy).toHaveBeenCalled();\r\n  });\r\n\r\n  test('uses SafeAreaProvider when ViewManager is available', () => {\r\n    (UIManager as any).getViewManagerConfig = jest.fn(() => ({ name: 'RNCSafeAreaProvider' }));\r\n    const warnSpy = jest.spyOn(global.console, 'warn').mockImplementation(() => {});\r\n\r\n    const renderer = ReactTestRenderer.create(\r\n      <SafeAreaProviderGuard>\r\n        <Child />\r\n      </SafeAreaProviderGuard>\r\n    );\r\n\r\n    const tree = renderer.toJSON();\r\n    expect(tree).toBeTruthy();\r\n    expect(warnSpy).not.toHaveBeenCalled();\r\n  });\r\n});\r\n"],"mappings":";;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,kBAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,YAAA,GAAAF,OAAA;AACA,IAAAG,sBAAA,GAAAJ,sBAAA,CAAAC,OAAA;AAA6D,IAAAI,WAAA,GAAAJ,OAAA;AAE7D,IAAMK,KAAK,GAAG,SAARA,KAAKA,CAAA;EAAA,OAASC,cAAK,CAACC,aAAa,CAAC,OAAO,CAAC;AAAA;AAEhDC,QAAQ,CAAC,uBAAuB,EAAE,YAAM;EACtC,IAAMC,iBAAiB,GAAIC,sBAAS,CAASC,oBAAoB;EAEjEC,SAAS,CAAC,YAAM;IACbF,sBAAS,CAASC,oBAAoB,GAAGF,iBAAiB;IAC3DI,IAAI,CAACC,eAAe,CAAC,CAAC;EACxB,CAAC,CAAC;EAEFC,IAAI,CAAC,wDAAwD,EAAE,YAAM;IAClEL,sBAAS,CAASC,oBAAoB,GAAGE,IAAI,CAACG,EAAE,CAAC;MAAA,OAAM,IAAI;IAAA,EAAC;IAC7D,IAAMC,OAAO,GAAGJ,IAAI,CAACK,KAAK,CAACC,MAAM,CAACC,OAAO,EAAE,MAAM,CAAC,CAACC,kBAAkB,CAAC,YAAM,CAAC,CAAC,CAAC;IAE/E,IAAMC,QAAQ,GAAGC,0BAAiB,CAACC,MAAM,CACvC,IAAApB,WAAA,CAAAqB,GAAA,EAACtB,sBAAA,CAAAuB,OAAqB;MAAAC,QAAA,EACpB,IAAAvB,WAAA,CAAAqB,GAAA,EAACpB,KAAK,IAAE;IAAC,CACY,CACzB,CAAC;IAED,IAAMuB,IAAI,GAAGN,QAAQ,CAACO,MAAM,CAAC,CAAC;IAC9BC,MAAM,CAACF,IAAI,CAAC,CAACG,UAAU,CAAC,CAAC;IACzBD,MAAM,CAACb,OAAO,CAAC,CAACe,gBAAgB,CAAC,CAAC;EACpC,CAAC,CAAC;EAEFjB,IAAI,CAAC,qDAAqD,EAAE,YAAM;IAC/DL,sBAAS,CAASC,oBAAoB,GAAGE,IAAI,CAACG,EAAE,CAAC;MAAA,OAAO;QAAEiB,IAAI,EAAE;MAAsB,CAAC;IAAA,CAAC,CAAC;IAC1F,IAAMhB,OAAO,GAAGJ,IAAI,CAACK,KAAK,CAACC,MAAM,CAACC,OAAO,EAAE,MAAM,CAAC,CAACC,kBAAkB,CAAC,YAAM,CAAC,CAAC,CAAC;IAE/E,IAAMC,QAAQ,GAAGC,0BAAiB,CAACC,MAAM,CACvC,IAAApB,WAAA,CAAAqB,GAAA,EAACtB,sBAAA,CAAAuB,OAAqB;MAAAC,QAAA,EACpB,IAAAvB,WAAA,CAAAqB,GAAA,EAACpB,KAAK,IAAE;IAAC,CACY,CACzB,CAAC;IAED,IAAMuB,IAAI,GAAGN,QAAQ,CAACO,MAAM,CAAC,CAAC;IAC9BC,MAAM,CAACF,IAAI,CAAC,CAACG,UAAU,CAAC,CAAC;IACzBD,MAAM,CAACb,OAAO,CAAC,CAACiB,GAAG,CAACF,gBAAgB,CAAC,CAAC;EACxC,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}