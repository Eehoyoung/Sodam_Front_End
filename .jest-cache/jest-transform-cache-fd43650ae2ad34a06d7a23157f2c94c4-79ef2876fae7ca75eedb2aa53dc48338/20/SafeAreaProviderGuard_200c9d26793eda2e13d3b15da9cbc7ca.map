{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_reactNativeSafeAreaContext","_jsxRuntime","SafeAreaProviderGuard","_ref","children","hasSafeAreaVM","UIManager","getViewManagerConfig","console","warn","jsx","View","style","flex","SafeAreaProvider","_default","exports","default"],"sources":["SafeAreaProviderGuard.tsx"],"sourcesContent":["import React from 'react';\r\nimport { UIManager, View } from 'react-native';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\n\r\ninterface Props {\r\n  children: React.ReactNode;\r\n}\r\n\r\n/**\r\n * SafeAreaProviderGuard\r\n * - Uses SafeAreaProvider if the native ViewManager 'RNCSafeAreaProvider' is available\r\n * - Otherwise, falls back to a plain View and logs a warning.\r\n * This provides an alternate/augmentation strategy to keep the app running even when\r\n * the native module is not properly registered, especially in Bridgeless/Fabric.\r\n */\r\nconst SafeAreaProviderGuard: React.FC<Props> = ({ children }) => {\r\n  const hasSafeAreaVM = !!(UIManager as any)?.getViewManagerConfig?.('RNCSafeAreaProvider');\r\n\r\n  if (!hasSafeAreaVM) {\r\n    console.warn('[SAFE-AREA] RNCSafeAreaProvider ViewManager not found. Falling back to View.');\r\n    return <View style={{ flex: 1 }}>{children}</View>;\r\n  }\r\n\r\n  return <SafeAreaProvider>{children}</SafeAreaProvider>;\r\n};\r\n\r\nexport default SafeAreaProviderGuard;\r\n"],"mappings":";;;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,2BAAA,GAAAF,OAAA;AAAkE,IAAAG,WAAA,GAAAH,OAAA;AAalE,IAAMI,qBAAsC,GAAG,SAAzCA,qBAAsCA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACxD,IAAMC,aAAa,GAAG,CAAC,EAAEC,sBAAS,YAATA,sBAAS,CAAUC,oBAAoB,YAAvCD,sBAAS,CAAUC,oBAAoB,CAAG,qBAAqB,CAAC;EAEzF,IAAI,CAACF,aAAa,EAAE;IAClBG,OAAO,CAACC,IAAI,CAAC,8EAA8E,CAAC;IAC5F,OAAO,IAAAR,WAAA,CAAAS,GAAA,EAACX,YAAA,CAAAY,IAAI;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAE;MAAE,CAAE;MAAAT,QAAA,EAAEA;IAAQ,CAAO,CAAC;EACpD;EAEA,OAAO,IAAAH,WAAA,CAAAS,GAAA,EAACV,2BAAA,CAAAc,gBAAgB;IAAAV,QAAA,EAAEA;EAAQ,CAAmB,CAAC;AACxD,CAAC;AAAC,IAAAW,QAAA,GAAAC,OAAA,CAAAC,OAAA,GAEaf,qBAAqB","ignoreList":[]}