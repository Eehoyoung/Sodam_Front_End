0aa163be5033a31d1b25ade6cdc7a815
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactTestRenderer = _interopRequireWildcard(require("react-test-renderer"));
var _ErrorBoundary = _interopRequireDefault(require("../../components/ErrorBoundary"));
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
var Thrower = function Thrower() {
  throw new Error('Boom');
};
describe('ErrorBoundary', function () {
  var errorSpy;
  beforeAll(function () {
    errorSpy = jest.spyOn(console, 'error').mockImplementation(function () {});
  });
  afterAll(function () {
    errorSpy.mockRestore();
  });
  test('renders fallback UI when child throws and can retry to reset state', function () {
    var renderer;
    (0, _reactTestRenderer.act)(function () {
      renderer = _reactTestRenderer.default.create(_react.default.createElement(_ErrorBoundary.default, null, _react.default.createElement(Thrower)));
    });
    var instance = renderer.root;
    var texts = instance.findAllByType('Text').map(function (t) {
      return t.props.children;
    }).flat();
    expect(texts.join(' ')).toContain('문제가 발생했습니다');
    var retryButton = instance.findAllByType('TouchableOpacity')[0];
    (0, _reactTestRenderer.act)(function () {
      retryButton.props.onPress();
    });
    (0, _reactTestRenderer.act)(function () {
      renderer.update(_react.default.createElement(_ErrorBoundary.default, null, _react.default.createElement('View', null, _react.default.createElement('Text', null, 'OK'))));
    });
    var after = renderer.toJSON();
    expect(after).toBeTruthy();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdFRlc3RSZW5kZXJlciIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwiX0Vycm9yQm91bmRhcnkiLCJlIiwidCIsIldlYWtNYXAiLCJyIiwibiIsIl9fZXNNb2R1bGUiLCJvIiwiaSIsImYiLCJfX3Byb3RvX18iLCJkZWZhdWx0IiwiaGFzIiwiZ2V0Iiwic2V0IiwiX3QiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIlRocm93ZXIiLCJFcnJvciIsImRlc2NyaWJlIiwiZXJyb3JTcHkiLCJiZWZvcmVBbGwiLCJqZXN0Iiwic3B5T24iLCJjb25zb2xlIiwibW9ja0ltcGxlbWVudGF0aW9uIiwiYWZ0ZXJBbGwiLCJtb2NrUmVzdG9yZSIsInRlc3QiLCJyZW5kZXJlciIsImFjdCIsIlRlc3RSZW5kZXJlciIsImNyZWF0ZSIsIlJlYWN0IiwiY3JlYXRlRWxlbWVudCIsIkVycm9yQm91bmRhcnkiLCJpbnN0YW5jZSIsInJvb3QiLCJ0ZXh0cyIsImZpbmRBbGxCeVR5cGUiLCJtYXAiLCJwcm9wcyIsImNoaWxkcmVuIiwiZmxhdCIsImV4cGVjdCIsImpvaW4iLCJ0b0NvbnRhaW4iLCJyZXRyeUJ1dHRvbiIsIm9uUHJlc3MiLCJ1cGRhdGUiLCJhZnRlciIsInRvSlNPTiIsInRvQmVUcnV0aHkiXSwic291cmNlcyI6WyJlcnJvci1ib3VuZGFyeS50ZXN0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgVGVzdFJlbmRlcmVyLCB7IGFjdCB9IGZyb20gJ3JlYWN0LXRlc3QtcmVuZGVyZXInO1xyXG5pbXBvcnQgRXJyb3JCb3VuZGFyeSBmcm9tICcuLi8uLi9jb21wb25lbnRzL0Vycm9yQm91bmRhcnknO1xyXG5cclxuY29uc3QgVGhyb3dlcjogUmVhY3QuRkMgPSAoKSA9PiB7XHJcbiAgdGhyb3cgbmV3IEVycm9yKCdCb29tJyk7XHJcbn07XHJcblxyXG5kZXNjcmliZSgnRXJyb3JCb3VuZGFyeScsICgpID0+IHtcclxuICBsZXQgZXJyb3JTcHk6IGplc3QuU3B5SW5zdGFuY2U7XHJcbiAgYmVmb3JlQWxsKCgpID0+IHtcclxuICAgIGVycm9yU3B5ID0gamVzdC5zcHlPbihjb25zb2xlLCAnZXJyb3InKS5tb2NrSW1wbGVtZW50YXRpb24oKCkgPT4ge30pO1xyXG4gIH0pO1xyXG4gIGFmdGVyQWxsKCgpID0+IHtcclxuICAgIGVycm9yU3B5Lm1vY2tSZXN0b3JlKCk7XHJcbiAgfSk7XHJcblxyXG4gIHRlc3QoJ3JlbmRlcnMgZmFsbGJhY2sgVUkgd2hlbiBjaGlsZCB0aHJvd3MgYW5kIGNhbiByZXRyeSB0byByZXNldCBzdGF0ZScsICgpID0+IHtcclxuICAgIGxldCByZW5kZXJlcjogVGVzdFJlbmRlcmVyLlJlYWN0VGVzdFJlbmRlcmVyO1xyXG5cclxuICAgIGFjdCgoKSA9PiB7XHJcbiAgICAgIHJlbmRlcmVyID0gVGVzdFJlbmRlcmVyLmNyZWF0ZShcclxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEVycm9yQm91bmRhcnksIG51bGwsIFJlYWN0LmNyZWF0ZUVsZW1lbnQoVGhyb3dlcikpXHJcbiAgICAgICk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBjb25zdCBpbnN0YW5jZSA9IChyZW5kZXJlciBhcyBhbnkpLnJvb3Q7XHJcbiAgICBjb25zdCB0ZXh0cyA9IGluc3RhbmNlLmZpbmRBbGxCeVR5cGUoJ1RleHQnKS5tYXAoKHQ6IGFueSkgPT4gdC5wcm9wcy5jaGlsZHJlbikuZmxhdCgpO1xyXG4gICAgZXhwZWN0KHRleHRzLmpvaW4oJyAnKSkudG9Db250YWluKCfrrLjsoJzqsIAg67Cc7IOd7ZaI7Iq164uI64ukJyk7XHJcblxyXG4gICAgY29uc3QgcmV0cnlCdXR0b24gPSBpbnN0YW5jZS5maW5kQWxsQnlUeXBlKCdUb3VjaGFibGVPcGFjaXR5JylbMF07XHJcbiAgICBhY3QoKCkgPT4ge1xyXG4gICAgICByZXRyeUJ1dHRvbi5wcm9wcy5vblByZXNzKCk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBhY3QoKCkgPT4ge1xyXG4gICAgICAocmVuZGVyZXIgYXMgYW55KS51cGRhdGUoXHJcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcclxuICAgICAgICAgIEVycm9yQm91bmRhcnksXHJcbiAgICAgICAgICBudWxsLFxyXG4gICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgnVmlldycsIG51bGwsIFJlYWN0LmNyZWF0ZUVsZW1lbnQoJ1RleHQnLCBudWxsLCAnT0snKSlcclxuICAgICAgICApXHJcbiAgICAgICk7XHJcbiAgICB9KTtcclxuXHJcbiAgICBjb25zdCBhZnRlciA9IChyZW5kZXJlciBhcyBhbnkpLnRvSlNPTigpO1xyXG4gICAgZXhwZWN0KGFmdGVyKS50b0JlVHJ1dGh5KCk7XHJcbiAgfSk7XHJcbn0pO1xyXG4iXSwibWFwcGluZ3MiOiI7OztBQUFBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLGtCQUFBLEdBQUFDLHVCQUFBLENBQUFGLE9BQUE7QUFDQSxJQUFBRyxjQUFBLEdBQUFKLHNCQUFBLENBQUFDLE9BQUE7QUFBMkQsU0FBQUUsd0JBQUFFLENBQUEsRUFBQUMsQ0FBQSw2QkFBQUMsT0FBQSxNQUFBQyxDQUFBLE9BQUFELE9BQUEsSUFBQUUsQ0FBQSxPQUFBRixPQUFBLFlBQUFKLHVCQUFBLFlBQUFBLHdCQUFBRSxDQUFBLEVBQUFDLENBQUEsU0FBQUEsQ0FBQSxJQUFBRCxDQUFBLElBQUFBLENBQUEsQ0FBQUssVUFBQSxTQUFBTCxDQUFBLE1BQUFNLENBQUEsRUFBQUMsQ0FBQSxFQUFBQyxDQUFBLEtBQUFDLFNBQUEsUUFBQUMsT0FBQSxFQUFBVixDQUFBLGlCQUFBQSxDQUFBLHVCQUFBQSxDQUFBLHlCQUFBQSxDQUFBLFNBQUFRLENBQUEsTUFB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