8c8e3ad68e3d3cb15c737fc03615a54b
'use strict';

var _styleAnimation = require("../animation/styleAnimation");
var _commonTypes = require("../commonTypes");
var _mutables = require("../mutables");
var _threads = require("../threads");
var TAG_OFFSET = 1e9;
var _worklet_10675557011176_init_data = {
  code: "function startObservingProgress_animationsManagerTs1(tag,sharedValue,animationType){const{LayoutAnimationType,TAG_OFFSET}=this.__closure;const isSharedTransition=animationType===LayoutAnimationType.SHARED_ELEMENT_TRANSITION;sharedValue.addListener(tag+TAG_OFFSET,function(){global._notifyAboutProgress(tag,sharedValue.value,isSharedTransition);});}",
  location: "C:\\Users\\LeeHoYoung\\Desktop\\Sodam_Front_End\\node_modules\\react-native-reanimated\\src\\layoutReanimation\\animationsManager.ts",
  sourceMap: "{\"version\":3,\"names\":[\"startObservingProgress_animationsManagerTs1\",\"tag\",\"sharedValue\",\"animationType\",\"LayoutAnimationType\",\"TAG_OFFSET\",\"__closure\",\"isSharedTransition\",\"SHARED_ELEMENT_TRANSITION\",\"addListener\",\"global\",\"_notifyAboutProgress\",\"value\"],\"sources\":[\"C:/Users/LeeHoYoung/Desktop/Sodam_Front_End/node_modules/react-native-reanimated/src/layoutReanimation/animationsManager.ts\"],\"mappings\":\"AAcA,SAAAA,2CAGEA,CAAAC,GAAA,CAAAC,WACM,CAAAC,aAAA,QAAAC,mBAAA,CAAAC,UAAA,OAAAC,SAAA,CAEN,KAAM,CAAAC,kBAAkB,CACtBJ,aAAa,GAAKC,mBAAmB,CAACI,yBAAyB,CACjEN,WAAW,CAACO,WAAW,CAACR,GAAG,CAAGI,UAAU,CAAE,UAAM,CAC9CK,MAAM,CAACC,oBAAoB,CAACV,GAAG,CAAEC,WAAW,CAACU,KAAK,CAAEL,kBAAkB,CAAC,CACzE,CAAC,CAAC,CACJ\",\"ignoreList\":[]}",
  version: "3.19.1"
};
var startObservingProgress = function () {
  var _e = [new global.Error(), -3, -27];
  var startObservingProgress = function startObservingProgress(tag, sharedValue, animationType) {
    var isSharedTransition = animationType === _commonTypes.LayoutAnimationType.SHARED_ELEMENT_TRANSITION;
    sharedValue.addListener(tag + TAG_OFFSET, function () {
      global._notifyAboutProgress(tag, sharedValue.value, isSharedTransition);
    });
  };
  startObservingProgress.__closure = {
    LayoutAnimationType: _commonTypes.LayoutAnimationType,
    TAG_OFFSET: TAG_OFFSET
  };
  startObservingProgress.__workletHash = 10675557011176;
  startObservingProgress.__initData = _worklet_10675557011176_init_data;
  startObservingProgress.__stackDetails = _e;
  return startObservingProgress;
}();
var _worklet_16958055875360_init_data = {
  code: "function stopObservingProgress_animationsManagerTs2(tag,sharedValue,removeView=false){const{TAG_OFFSET}=this.__closure;sharedValue.removeListener(tag+TAG_OFFSET);global._notifyAboutEnd(tag,removeView);}",
  location: "C:\\Users\\LeeHoYoung\\Desktop\\Sodam_Front_End\\node_modules\\react-native-reanimated\\src\\layoutReanimation\\animationsManager.ts",
  sourceMap: "{\"version\":3,\"names\":[\"stopObservingProgress_animationsManagerTs2\",\"tag\",\"sharedValue\",\"removeView\",\"TAG_OFFSET\",\"__closure\",\"removeListener\",\"global\",\"_notifyAboutEnd\"],\"sources\":[\"C:/Users/LeeHoYoung/Desktop/Sodam_Front_End/node_modules/react-native-reanimated/src/layoutReanimation/animationsManager.ts\"],\"mappings\":\"AA2BA,SAAAA,0CAGEA,CAAAC,GAAA,CAAAC,WACD,CAAOC,UAAA,cAAAC,UAAA,OAAAC,SAAA,CAENH,WAAW,CAACI,cAAc,CAACL,GAAG,CAAGG,UAAU,CAAC,CAC5CG,MAAM,CAACC,eAAe,CAACP,GAAG,CAAEE,UAAU,CAAC,CACzC\",\"ignoreList\":[]}",
  version: "3.19.1"
};
var stopObservingProgress = function () {
  var _e = [new global.Error(), -2, -27];
  var stopObservingProgress = function stopObservingProgress(tag, sharedValue) {
    var removeView = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    sharedValue.removeListener(tag + TAG_OFFSET);
    global._notifyAboutEnd(tag, removeView);
  };
  stopObservingProgress.__closure = {
    TAG_OFFSET: TAG_OFFSET
  };
  stopObservingProgress.__workletHash = 16958055875360;
  stopObservingProgress.__initData = _worklet_16958055875360_init_data;
  stopObservingProgress.__stackDetails = _e;
  return stopObservingProgress;
}();
var _worklet_5423312481392_init_data = {
  code: "function createLayoutAnimationManager_animationsManagerTs3(){const{LayoutAnimationType,makeMutableUI,stopObservingProgress,withStyleAnimation,startObservingProgress}=this.__closure;const currentAnimationForTag=new Map();const mutableValuesForTag=new Map();return{start:function(tag,type,yogaValues,config){if(type===LayoutAnimationType.SHARED_ELEMENT_TRANSITION_PROGRESS){global.ProgressTransitionRegister.onTransitionStart(tag,yogaValues);return;}const style=config(yogaValues);let currentAnimation=style.animations;const previousAnimation=currentAnimationForTag.get(tag);if(previousAnimation){currentAnimation={...previousAnimation,...style.animations};}currentAnimationForTag.set(tag,currentAnimation);let value=mutableValuesForTag.get(tag);if(value===undefined){value=makeMutableUI(style.initialValues);mutableValuesForTag.set(tag,value);}else{stopObservingProgress(tag,value);value._value=style.initialValues;}const animation=withStyleAnimation(currentAnimation);animation.callback=function(finished){if(finished){currentAnimationForTag.delete(tag);mutableValuesForTag.delete(tag);const shouldRemoveView=type===LayoutAnimationType.EXITING;stopObservingProgress(tag,value,shouldRemoveView);}style.callback&&style.callback(finished===undefined?false:finished);};startObservingProgress(tag,value,type);value.value=animation;},stop:function(tag){const value=mutableValuesForTag.get(tag);if(!value){return;}stopObservingProgress(tag,value);}};}",
  location: "C:\\Users\\LeeHoYoung\\Desktop\\Sodam_Front_End\\node_modules\\react-native-reanimated\\src\\layoutReanimation\\animationsManager.ts",
  sourceMap: "{\"version\":3,\"names\":[\"createLayoutAnimationManager_animationsManagerTs3\",\"LayoutAnimationType\",\"makeMutableUI\",\"stopObservingProgress\",\"withStyleAnimation\",\"startObservingProgress\",\"__closure\",\"currentAnimationForTag\",\"Map\",\"mutableValuesForTag\",\"start\",\"tag\",\"type\",\"yogaValues\",\"config\",\"SHARED_ELEMENT_TRANSITION_PROGRESS\",\"global\",\"ProgressTransitionRegister\",\"onTransitionStart\",\"style\",\"currentAnimation\",\"animations\",\"previousAnimation\",\"get\",\"set\",\"value\",\"undefined\",\"initialValues\",\"_value\",\"animation\",\"callback\",\"finished\",\"delete\",\"shouldRemoveView\",\"EXITING\",\"stop\"],\"sources\":[\"C:/Users/LeeHoYoung/Desktop/Sodam_Front_End/node_modules/react-native-reanimated/src/layoutReanimation/animationsManager.ts\"],\"mappings\":\"AAqCA,SAAAA,iDAGEA,CAAA,QAAAC,mBAAA,CAAAC,aAAA,CAAAC,qBAAA,CAAAC,kBAAA,CAAAC,sBAAA,OAAAC,SAAA,CAEA,KAAM,CAAAC,sBAAsB,CAAG,GAAI,CAAAC,GAAG,CAAC,CAAC,CACxC,KAAM,CAAAC,mBAAmB,CAAG,GAAI,CAAAD,GAAG,CAAC,CAAC,CAErC,MAAO,CACLE,KAAK,SAAAA,CACHC,GAAW,CACXC,IAAyB,CAKzBC,UAAqD,CACrDC,MAEoB,CACpB,CACA,GAAIF,IAAI,GAAKX,mBAAmB,CAACc,kCAAkC,CAAE,CACnEC,MAAM,CAACC,0BAA0B,CAACC,iBAAiB,CAACP,GAAG,CAAEE,UAAU,CAAC,CACpE,OACF,CAEA,KAAM,CAAAM,KAAK,CAAGL,MAAM,CAACD,UAAU,CAAC,CAChC,GAAI,CAAAO,gBAAgB,CAAGD,KAAK,CAACE,UAAU,CAIvC,KAAM,CAAAC,iBAAiB,CAAGf,sBAAsB,CAACgB,GAAG,CAACZ,GAAG,CAAC,CACzD,GAAIW,iBAAiB,CAAE,CACrBF,gBAAgB,CAAG,CAAE,GAAGE,iBAAiB,CAAE,GAAGH,KAAK,CAACE,UAAW,CAAC,CAClE,CACAd,sBAAsB,CAACiB,GAAG,CAACb,GAAG,CAAES,gBAAgB,CAAC,CAEjD,GAAI,CAAAK,KAAK,CAAGhB,mBAAmB,CAACc,GAAG,CAACZ,GAAG,CAAC,CACxC,GAAIc,KAAK,GAAKC,SAAS,CAAE,CACvBD,KAAK,CAAGvB,aAAa,CAACiB,KAAK,CAACQ,aAAa,CAAC,CAC1ClB,mBAAmB,CAACe,GAAG,CAACb,GAAG,CAAEc,KAAK,CAAC,CACrC,CAAC,IAAM,CACLtB,qBAAqB,CAACQ,GAAG,CAAEc,KAAK,CAAC,CACjCA,KAAK,CAACG,MAAM,CAAGT,KAAK,CAACQ,aAAa,CACpC,CAGA,KAAM,CAAAE,SAAS,CAAGzB,kBAAkB,CAACgB,gBAAgB,CAAC,CAEtDS,SAAS,CAACC,QAAQ,CAAG,SAACC,QAAkB,CAAK,CAC3C,GAAIA,QAAQ,CAAE,CACZxB,sBAAsB,CAACyB,MAAM,CAACrB,GAAG,CAAC,CAClCF,mBAAmB,CAACuB,MAAM,CAACrB,GAAG,CAAC,CAC/B,KAAM,CAAAsB,gBAAgB,CAAGrB,IAAI,GAAKX,mBAAmB,CAACiC,OAAO,CAC7D/B,qBAAqB,CAACQ,GAAG,CAAEc,KAAK,CAAEQ,gBAAgB,CAAC,CACrD,CACAd,KAAK,CAACW,QAAQ,EACZX,KAAK,CAACW,QAAQ,CAACC,QAAQ,GAAKL,SAAS,CAAG,KAAK,CAAGK,QAAQ,CAAC,CAC7D,CAAC,CAED1B,sBAAsB,CAACM,GAAG,CAAEc,KAAK,CAAEb,IAAI,CAAC,CACxCa,KAAK,CAACA,KAAK,CAAGI,SAAS,CACzB,CAAC,CACDM,IAAI,SAAAA,CAACxB,GAAW,CAAE,CAChB,KAAM,CAAAc,KAAK,CAAGhB,mBAAmB,CAACc,GAAG,CAACZ,GAAG,CAAC,CAC1C,GAAI,CAACc,KAAK,CAAE,CACV,OACF,CACAtB,qBAAqB,CAACQ,GAAG,CAAEc,KAAK,CAAC,CACnC,CACF,CAAC,CACH\",\"ignoreList\":[]}",
  version: "3.19.1"
};
var createLayoutAnimationManager = function () {
  var _e = [new global.Error(), -6, -27];
  var createLayoutAnimationManager = function createLayoutAnimationManager() {
    var currentAnimationForTag = new Map();
    var mutableValuesForTag = new Map();
    return {
      start: function start(tag, type, yogaValues, config) {
        if (type === _commonTypes.LayoutAnimationType.SHARED_ELEMENT_TRANSITION_PROGRESS) {
          global.ProgressTransitionRegister.onTransitionStart(tag, yogaValues);
          return;
        }
        var style = config(yogaValues);
        var currentAnimation = style.animations;
        var previousAnimation = currentAnimationForTag.get(tag);
        if (previousAnimation) {
          currentAnimation = Object.assign({}, previousAnimation, style.animations);
        }
        currentAnimationForTag.set(tag, currentAnimation);
        var value = mutableValuesForTag.get(tag);
        if (value === undefined) {
          value = (0, _mutables.makeMutableUI)(style.initialValues);
          mutableValuesForTag.set(tag, value);
        } else {
          stopObservingProgress(tag, value);
          value._value = style.initialValues;
        }
        var animation = (0, _styleAnimation.withStyleAnimation)(currentAnimation);
        animation.callback = function (finished) {
          if (finished) {
            currentAnimationForTag.delete(tag);
            mutableValuesForTag.delete(tag);
            var shouldRemoveView = type === _commonTypes.LayoutAnimationType.EXITING;
            stopObservingProgress(tag, value, shouldRemoveView);
          }
          style.callback && style.callback(finished === undefined ? false : finished);
        };
        startObservingProgress(tag, value, type);
        value.value = animation;
      },
      stop: function stop(tag) {
        var value = mutableValuesForTag.get(tag);
        if (!value) {
          return;
        }
        stopObservingProgress(tag, value);
      }
    };
  };
  createLayoutAnimationManager.__closure = {
    LayoutAnimationType: _commonTypes.LayoutAnimationType,
    makeMutableUI: _mutables.makeMutableUI,
    stopObservingProgress: stopObservingProgress,
    withStyleAnimation: _styleAnimation.withStyleAnimation,
    startObservingProgress: startObservingProgress
  };
  createLayoutAnimationManager.__workletHash = 5423312481392;
  createLayoutAnimationManager.__initData = _worklet_5423312481392_init_data;
  createLayoutAnimationManager.__stackDetails = _e;
  return createLayoutAnimationManager;
}();
var _worklet_6336697456501_init_data = {
  code: "function animationsManagerTs4(){const{createLayoutAnimationManager}=this.__closure;global.LayoutAnimationsManager=createLayoutAnimationManager();}",
  location: "C:\\Users\\LeeHoYoung\\Desktop\\Sodam_Front_End\\node_modules\\react-native-reanimated\\src\\layoutReanimation\\animationsManager.ts",
  sourceMap: "{\"version\":3,\"names\":[\"animationsManagerTs4\",\"createLayoutAnimationManager\",\"__closure\",\"global\",\"LayoutAnimationsManager\"],\"sources\":[\"C:/Users/LeeHoYoung/Desktop/Sodam_Front_End/node_modules/react-native-reanimated/src/layoutReanimation/animationsManager.ts\"],\"mappings\":\"AA8GmB,SAAAA,oBAAMA,CAAA,QAAAC,4BAAA,OAAAC,SAAA,CAEvBC,MAAM,CAACC,uBAAuB,CAAGH,4BAA4B,CAAC,CAAC,CACjE\",\"ignoreList\":[]}",
  version: "3.19.1"
};
(0, _threads.runOnUIImmediately)(function () {
  var _e = [new global.Error(), -2, -27];
  var animationsManagerTs4 = function animationsManagerTs4() {
    global.LayoutAnimationsManager = createLayoutAnimationManager();
  };
  animationsManagerTs4.__closure = {
    createLayoutAnimationManager: createLayoutAnimationManager
  };
  animationsManagerTs4.__workletHash = 6336697456501;
  animationsManagerTs4.__initData = _worklet_6336697456501_init_data;
  animationsManagerTs4.__stackDetails = _e;
  return animationsManagerTs4;
}())();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfc3R5bGVBbmltYXRpb24iLCJyZXF1aXJlIiwiX2NvbW1vblR5cGVzIiwiX211dGFibGVzIiwiX3RocmVhZHMiLCJUQUdfT0ZGU0VUIiwiX3dvcmtsZXRfMTA2NzU1NTcwMTExNzZfaW5pdF9kYXRhIiwiY29kZSIsImxvY2F0aW9uIiwic291cmNlTWFwIiwidmVyc2lvbiIsInN0YXJ0T2JzZXJ2aW5nUHJvZ3Jlc3MiLCJfZSIsImdsb2JhbCIsIkVycm9yIiwidGFnIiwic2hhcmVkVmFsdWUiLCJhbmltYXRpb25UeXBlIiwiaXNTaGFyZWRUcmFuc2l0aW9uIiwiTGF5b3V0QW5pbWF0aW9uVHlwZSIsIlNIQVJFRF9FTEVNRU5UX1RSQU5TSVRJT04iLCJhZGRMaXN0ZW5lciIsIl9ub3RpZnlBYm91dFByb2dyZXNzIiwidmFsdWUiLCJfX2Nsb3N1cmUiLCJfX3dvcmtsZXRIYXNoIiwiX19pbml0RGF0YSIsIl9fc3RhY2tEZXRhaWxzIiwiX3dvcmtsZXRfMTY5NTgwNTU4NzUzNjBfaW5pdF9kYXRhIiwic3RvcE9ic2VydmluZ1Byb2dyZXNzIiwicmVtb3ZlVmlldyIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsInJlbW92ZUxpc3RlbmVyIiwiX25vdGlmeUFib3V0RW5kIiwiX3dvcmtsZXRfNTQyMzMxMjQ4MTM5Ml9pbml0X2RhdGEiLCJjcmVhdGVMYXlvdXRBbmltYXRpb25NYW5hZ2VyIiwiY3VycmVudEFuaW1hdGlvbkZvclRhZyIsIk1hcCIsIm11dGFibGVWYWx1ZXNGb3JUYWciLCJzdGFydCIsInR5cGUiLCJ5b2dhVmFsdWVzIiwiY29uZmlnIiwiU0hBUkVEX0VMRU1FTlRfVFJBTlNJVElPTl9QUk9HUkVTUyIsIlByb2dyZXNzVHJhbnNpdGlvblJlZ2lzdGVyIiwib25UcmFuc2l0aW9uU3RhcnQiLCJzdHlsZSIsImN1cnJlbnRBbmltYXRpb24iLCJhbmltYXRpb25zIiwicHJldmlvdXNBbmltYXRpb24iLCJnZXQiLCJPYmplY3QiLCJhc3NpZ24iLCJzZXQiLCJtYWtlTXV0YWJsZVVJIiwiaW5pdGlhbFZhbHVlcyIsIl92YWx1ZSIsImFuaW1hdGlvbiIsIndpdGhTdHlsZUFuaW1hdGlvbiIsImNhbGxiYWNrIiwiZmluaXNoZWQiLCJkZWxldGUiLCJzaG91bGRSZW1vdmVWaWV3IiwiRVhJVElORyIsInN0b3AiLCJfd29ya2xldF82MzM2Njk3NDU2NTAxX2luaXRfZGF0YSIsInJ1bk9uVUlJbW1lZGlhdGVseSIsImFuaW1hdGlvbnNNYW5hZ2VyVHM0IiwiTGF5b3V0QW5pbWF0aW9uc01hbmFnZXIiXSwic291cmNlcyI6WyJhbmltYXRpb25zTWFuYWdlci50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5pbXBvcnQgeyB3aXRoU3R5bGVBbmltYXRpb24gfSBmcm9tICcuLi9hbmltYXRpb24vc3R5bGVBbmltYXRpb24nO1xuaW1wb3J0IHR5cGUge1xuICBMYXlvdXRBbmltYXRpb24sXG4gIExheW91dEFuaW1hdGlvblN0YXJ0RnVuY3Rpb24sXG4gIFNoYXJlZFRyYW5zaXRpb25BbmltYXRpb25zVmFsdWVzLFxuICBTaGFyZWRWYWx1ZSxcbn0gZnJvbSAnLi4vY29tbW9uVHlwZXMnO1xuaW1wb3J0IHsgTGF5b3V0QW5pbWF0aW9uVHlwZSB9IGZyb20gJy4uL2NvbW1vblR5cGVzJztcbmltcG9ydCB7IG1ha2VNdXRhYmxlVUkgfSBmcm9tICcuLi9tdXRhYmxlcyc7XG5pbXBvcnQgeyBydW5PblVJSW1tZWRpYXRlbHkgfSBmcm9tICcuLi90aHJlYWRzJztcblxuY29uc3QgVEFHX09GRlNFVCA9IDFlOTtcblxuZnVuY3Rpb24gc3RhcnRPYnNlcnZpbmdQcm9ncmVzcyhcbiAgdGFnOiBudW1iZXIsXG4gIHNoYXJlZFZhbHVlOiBTaGFyZWRWYWx1ZTxSZWNvcmQ8c3RyaW5nLCB1bmtub3duPj4sXG4gIGFuaW1hdGlvblR5cGU6IExheW91dEFuaW1hdGlvblR5cGVcbik6IHZvaWQge1xuICAnd29ya2xldCc7XG4gIGNvbnN0IGlzU2hhcmVkVHJhbnNpdGlvbiA9XG4gICAgYW5pbWF0aW9uVHlwZSA9PT0gTGF5b3V0QW5pbWF0aW9uVHlwZS5TSEFSRURfRUxFTUVOVF9UUkFOU0lUSU9OO1xuICBzaGFyZWRWYWx1ZS5hZGRMaXN0ZW5lcih0YWcgKyBUQUdfT0ZGU0VULCAoKSA9PiB7XG4gICAgZ2xvYmFsLl9ub3RpZnlBYm91dFByb2dyZXNzKHRhZywgc2hhcmVkVmFsdWUudmFsdWUsIGlzU2hhcmVkVHJhbnNpdGlvbik7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBzdG9wT2JzZXJ2aW5nUHJvZ3Jlc3MoXG4gIHRhZzogbnVtYmVyLFxuICBzaGFyZWRWYWx1ZTogU2hhcmVkVmFsdWU8bnVtYmVyPixcbiAgcmVtb3ZlVmlldyA9IGZhbHNlXG4pOiB2b2lkIHtcbiAgJ3dvcmtsZXQnO1xuICBzaGFyZWRWYWx1ZS5yZW1vdmVMaXN0ZW5lcih0YWcgKyBUQUdfT0ZGU0VUKTtcbiAgZ2xvYmFsLl9ub3RpZnlBYm91dEVuZCh0YWcsIHJlbW92ZVZpZXcpO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVMYXlvdXRBbmltYXRpb25NYW5hZ2VyKCk6IHtcbiAgc3RhcnQ6IExheW91dEFuaW1hdGlvblN0YXJ0RnVuY3Rpb247XG4gIHN0b3A6ICh0YWc6IG51bWJlcikgPT4gdm9pZDtcbn0ge1xuICAnd29ya2xldCc7XG4gIGNvbnN0IGN1cnJlbnRBbmltYXRpb25Gb3JUYWcgPSBuZXcgTWFwKCk7XG4gIGNvbnN0IG11dGFibGVWYWx1ZXNGb3JUYWcgPSBuZXcgTWFwKCk7XG5cbiAgcmV0dXJuIHtcbiAgICBzdGFydChcbiAgICAgIHRhZzogbnVtYmVyLFxuICAgICAgdHlwZTogTGF5b3V0QW5pbWF0aW9uVHlwZSxcbiAgICAgIC8qKlxuICAgICAgICogQ3JlYXRlTGF5b3V0QW5pbWF0aW9uTWFuYWdlciBjcmVhdGVzIGFuIGFuaW1hdGlvbiBtYW5hZ2VyIGZvciBib3RoXG4gICAgICAgKiBMYXlvdXQgYW5pbWF0aW9ucyBhbmQgU2hhcmVkIFRyYW5zaXRpb24gRWxlbWVudHMgYW5pbWF0aW9ucy5cbiAgICAgICAqL1xuICAgICAgeW9nYVZhbHVlczogUGFydGlhbDxTaGFyZWRUcmFuc2l0aW9uQW5pbWF0aW9uc1ZhbHVlcz4sXG4gICAgICBjb25maWc6IChcbiAgICAgICAgYXJnOiBQYXJ0aWFsPFNoYXJlZFRyYW5zaXRpb25BbmltYXRpb25zVmFsdWVzPlxuICAgICAgKSA9PiBMYXlvdXRBbmltYXRpb25cbiAgICApIHtcbiAgICAgIGlmICh0eXBlID09PSBMYXlvdXRBbmltYXRpb25UeXBlLlNIQVJFRF9FTEVNRU5UX1RSQU5TSVRJT05fUFJPR1JFU1MpIHtcbiAgICAgICAgZ2xvYmFsLlByb2dyZXNzVHJhbnNpdGlvblJlZ2lzdGVyLm9uVHJhbnNpdGlvblN0YXJ0KHRhZywgeW9nYVZhbHVlcyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgY29uc3Qgc3R5bGUgPSBjb25maWcoeW9nYVZhbHVlcyk7XG4gICAgICBsZXQgY3VycmVudEFuaW1hdGlvbiA9IHN0eWxlLmFuaW1hdGlvbnM7XG5cbiAgICAgIC8vIFdoZW4gbGF5b3V0IGFuaW1hdGlvbiBpcyByZXF1ZXN0ZWQsIGJ1dCBhIHByZXZpb3VzIG9uZSBpcyBzdGlsbCBydW5uaW5nLCB3ZSBtZXJnZVxuICAgICAgLy8gbmV3IGxheW91dCBhbmltYXRpb24gdGFyZ2V0cyBpbnRvIHRoZSBvbmdvaW5nIGFuaW1hdGlvblxuICAgICAgY29uc3QgcHJldmlvdXNBbmltYXRpb24gPSBjdXJyZW50QW5pbWF0aW9uRm9yVGFnLmdldCh0YWcpO1xuICAgICAgaWYgKHByZXZpb3VzQW5pbWF0aW9uKSB7XG4gICAgICAgIGN1cnJlbnRBbmltYXRpb24gPSB7IC4uLnByZXZpb3VzQW5pbWF0aW9uLCAuLi5zdHlsZS5hbmltYXRpb25zIH07XG4gICAgICB9XG4gICAgICBjdXJyZW50QW5pbWF0aW9uRm9yVGFnLnNldCh0YWcsIGN1cnJlbnRBbmltYXRpb24pO1xuXG4gICAgICBsZXQgdmFsdWUgPSBtdXRhYmxlVmFsdWVzRm9yVGFnLmdldCh0YWcpO1xuICAgICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdmFsdWUgPSBtYWtlTXV0YWJsZVVJKHN0eWxlLmluaXRpYWxWYWx1ZXMpO1xuICAgICAgICBtdXRhYmxlVmFsdWVzRm9yVGFnLnNldCh0YWcsIHZhbHVlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHN0b3BPYnNlcnZpbmdQcm9ncmVzcyh0YWcsIHZhbHVlKTtcbiAgICAgICAgdmFsdWUuX3ZhbHVlID0gc3R5bGUuaW5pdGlhbFZhbHVlcztcbiAgICAgIH1cblxuICAgICAgLy8gQHRzLWlnbm9yZSBUaGUgbGluZSBiZWxvdyBzdGFydGVkIGZhaWxpbmcgYmVjYXVzZSBJIGFkZGVkIHR5cGVzIHRvIHRoZSBtZXRob2Qg4oCTIGRvbid0IGhhdmUgdGltZSB0byBmaXggaXQgcmlnaHQgbm93XG4gICAgICBjb25zdCBhbmltYXRpb24gPSB3aXRoU3R5bGVBbmltYXRpb24oY3VycmVudEFuaW1hdGlvbik7XG5cbiAgICAgIGFuaW1hdGlvbi5jYWxsYmFjayA9IChmaW5pc2hlZD86IGJvb2xlYW4pID0+IHtcbiAgICAgICAgaWYgKGZpbmlzaGVkKSB7XG4gICAgICAgICAgY3VycmVudEFuaW1hdGlvbkZvclRhZy5kZWxldGUodGFnKTtcbiAgICAgICAgICBtdXRhYmxlVmFsdWVzRm9yVGFnLmRlbGV0ZSh0YWcpO1xuICAgICAgICAgIGNvbnN0IHNob3VsZFJlbW92ZVZpZXcgPSB0eXBlID09PSBMYXlvdXRBbmltYXRpb25UeXBlLkVYSVRJTkc7XG4gICAgICAgICAgc3RvcE9ic2VydmluZ1Byb2dyZXNzKHRhZywgdmFsdWUsIHNob3VsZFJlbW92ZVZpZXcpO1xuICAgICAgICB9XG4gICAgICAgIHN0eWxlLmNhbGxiYWNrICYmXG4gICAgICAgICAgc3R5bGUuY2FsbGJhY2soZmluaXNoZWQgPT09IHVuZGVmaW5lZCA/IGZhbHNlIDogZmluaXNoZWQpO1xuICAgICAgfTtcblxuICAgICAgc3RhcnRPYnNlcnZpbmdQcm9ncmVzcyh0YWcsIHZhbHVlLCB0eXBlKTtcbiAgICAgIHZhbHVlLnZhbHVlID0gYW5pbWF0aW9uO1xuICAgIH0sXG4gICAgc3RvcCh0YWc6IG51bWJlcikge1xuICAgICAgY29uc3QgdmFsdWUgPSBtdXRhYmxlVmFsdWVzRm9yVGFnLmdldCh0YWcpO1xuICAgICAgaWYgKCF2YWx1ZSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBzdG9wT2JzZXJ2aW5nUHJvZ3Jlc3ModGFnLCB2YWx1ZSk7XG4gICAgfSxcbiAgfTtcbn1cblxucnVuT25VSUltbWVkaWF0ZWx5KCgpID0+IHtcbiAgJ3dvcmtsZXQnO1xuICBnbG9iYWwuTGF5b3V0QW5pbWF0aW9uc01hbmFnZXIgPSBjcmVhdGVMYXlvdXRBbmltYXRpb25NYW5hZ2VyKCk7XG59KSgpO1xuXG5leHBvcnQgdHlwZSBMYXlvdXRBbmltYXRpb25zTWFuYWdlciA9IFJldHVyblR5cGU8XG4gIHR5cGVvZiBjcmVhdGVMYXlvdXRBbmltYXRpb25NYW5hZ2VyXG4+O1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxZQUFZOztBQUNaLElBQUFBLGVBQUEsR0FBQUMsT0FBQTtBQU9BLElBQUFDLFlBQUEsR0FBQUQsT0FBQTtBQUNBLElBQUFFLFNBQUEsR0FBQUYsT0FBQTtBQUNBLElBQUFHLFFBQUEsR0FBQUgsT0FBQTtBQUVBLElBQU1JLFVBQVUsR0FBRyxHQUFHO0FBQUMsSUFBQUMsaUNBQUE7RUFBQUMsSUFBQTtFQUFBQyxRQUFBO0VBQUFDLFNBQUE7RUFBQUMsT0FBQTtBQUFBO0FBQUEsSUFBQUMsc0JBQUEsR0FFdkI7RUFBQSxJQUFBQyxFQUFBLFFBQUFDLE1BQUEsQ0FBQUMsS0FBQTtFQUFBLElBQUFILHNCQUFBLFlBQUFBLHVCQUNFSSxHQUFXLEVBQ1hDLFdBQWlELEVBQ2pEQyxhQUFrQyxFQUM1QjtJQUVOLElBQU1DLGtCQUFrQixHQUN0QkQsYUFBYSxLQUFLRSxnQ0FBbUIsQ0FBQ0MseUJBQXlCO0lBQ2pFSixX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