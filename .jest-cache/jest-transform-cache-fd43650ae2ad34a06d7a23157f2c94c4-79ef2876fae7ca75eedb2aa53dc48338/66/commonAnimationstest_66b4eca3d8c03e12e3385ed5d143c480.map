{"version":3,"names":["_animationTestUtils","require","_commonAnimations","_constants","describe","testSetup","beforeEach","TestSetup","setupAnimationTesting","afterEach","restore","test","_asyncToGenerator2","default","opacityValue","AnimationTestHelpers","createMockSharedValue","result","AnimationTestScenarios","testFadeIn","value","fadeIn","expectedDuration","ANIMATION_DURATIONS","NORMAL","toleranceMs","expect","success","toBe","error","toBeUndefined","testFadeOut","fadeOut","customDuration","executeAnimationTest","Math","abs","actualDuration","toBeLessThanOrEqual","scaleValue","testScaleAnimation","ANIMATION_VALUES","SCALE","scaleIn","HIDDEN","scaleOut","translateValue","slideDistance","testSlideAnimation","slideUp","slideDown","pulse","shake","isValid","AnimationValidators","validateOpacityAnimation","OPACITY","VISIBLE","validateScaleAnimation","validateTranslationAnimation","validateAnimationDuration","validateFrameRate","benchmark","PerformanceBenchmark","benchmarkAnimation","averageDuration","toBeGreaterThan","minDuration","maxDuration","successRate","animation1","animation2","comparison","compareAnimations","winner","toBeDefined","improvement","toBeGreaterThanOrEqual","mockValue","addListener","removeListener","modify","startTime","Date","now","waitForAnimation","endTime","duration","mockTimers","setupMockTimers","completed","setTimeout","advanceTime"],"sources":["commonAnimations.test.ts"],"sourcesContent":["/**\r\n * Tests for Common Animation Functions\r\n *\r\n * This file demonstrates how to use the animation testing utilities\r\n * to test the common animation functions.\r\n */\r\n\r\nimport {\r\n    AnimationTestHelpers,\r\n    AnimationTestScenarios,\r\n    AnimationValidators,\r\n    PerformanceBenchmark,\r\n    TestSetup,\r\n} from './animationTestUtils';\r\nimport {fadeIn, fadeOut, pulse, scaleIn, scaleOut, shake, slideDown, slideUp,} from '../commonAnimations';\r\nimport {ANIMATION_DURATIONS, ANIMATION_VALUES,} from '../constants';\r\n\r\ndescribe('Common Animation Functions', () => {\r\n    let testSetup: ReturnType<typeof TestSetup.setupAnimationTesting>;\r\n\r\n    beforeEach(() => {\r\n        testSetup = TestSetup.setupAnimationTesting();\r\n    });\r\n\r\n    afterEach(() => {\r\n        testSetup.restore();\r\n    });\r\n\r\n    describe('Fade Animations', () => {\r\n        test('fadeIn should animate opacity from 0 to 1', async () => {\r\n            const opacityValue = AnimationTestHelpers.createMockSharedValue(0);\r\n\r\n            const result = await AnimationTestScenarios.testFadeIn(\r\n                opacityValue,\r\n                () => {\r\n                    opacityValue.value = fadeIn();\r\n                },\r\n                {\r\n                    expectedDuration: ANIMATION_DURATIONS.NORMAL,\r\n                    toleranceMs: 50,\r\n                }\r\n            );\r\n\r\n            expect(result.success).toBe(true);\r\n            expect(result.error).toBeUndefined();\r\n        });\r\n\r\n        test('fadeOut should animate opacity from 1 to 0', async () => {\r\n            const opacityValue = AnimationTestHelpers.createMockSharedValue(1);\r\n\r\n            const result = await AnimationTestScenarios.testFadeOut(\r\n                opacityValue,\r\n                () => {\r\n                    opacityValue.value = fadeOut();\r\n                },\r\n                {\r\n                    expectedDuration: ANIMATION_DURATIONS.NORMAL,\r\n                    toleranceMs: 50,\r\n                }\r\n            );\r\n\r\n            expect(result.success).toBe(true);\r\n            expect(result.error).toBeUndefined();\r\n        });\r\n\r\n        test('fadeIn with custom duration should respect timing', async () => {\r\n            const customDuration = 500;\r\n            const opacityValue = AnimationTestHelpers.createMockSharedValue(0);\r\n\r\n            const result = await AnimationTestHelpers.executeAnimationTest(\r\n                'fadeIn_custom_duration',\r\n                () => {\r\n                    opacityValue.value = fadeIn(customDuration);\r\n                },\r\n                {\r\n                    expectedDuration: customDuration,\r\n                    toleranceMs: 50,\r\n                }\r\n            );\r\n\r\n            expect(result.success).toBe(true);\r\n            expect(Math.abs(result.actualDuration - customDuration)).toBeLessThanOrEqual(50);\r\n        });\r\n    });\r\n\r\n    describe('Scale Animations', () => {\r\n        test('scaleIn should animate scale from 0 to 1', async () => {\r\n            const scaleValue = AnimationTestHelpers.createMockSharedValue(0);\r\n\r\n            const result = await AnimationTestScenarios.testScaleAnimation(\r\n                scaleValue,\r\n                ANIMATION_VALUES.SCALE.NORMAL,\r\n                () => {\r\n                    scaleValue.value = scaleIn();\r\n                }\r\n            );\r\n\r\n            expect(result.success).toBe(true);\r\n            expect(result.error).toBeUndefined();\r\n        });\r\n\r\n        test('scaleOut should animate scale from 1 to 0', async () => {\r\n            const scaleValue = AnimationTestHelpers.createMockSharedValue(1);\r\n\r\n            const result = await AnimationTestScenarios.testScaleAnimation(\r\n                scaleValue,\r\n                ANIMATION_VALUES.SCALE.HIDDEN,\r\n                () => {\r\n                    scaleValue.value = scaleOut();\r\n                }\r\n            );\r\n\r\n            expect(result.success).toBe(true);\r\n            expect(result.error).toBeUndefined();\r\n        });\r\n    });\r\n\r\n    describe('Slide Animations', () => {\r\n        test('slideUp should animate translateY to negative value', async () => {\r\n            const translateValue = AnimationTestHelpers.createMockSharedValue(0);\r\n            const slideDistance = 50;\r\n\r\n            const result = await AnimationTestScenarios.testSlideAnimation(\r\n                translateValue,\r\n                -slideDistance,\r\n                () => {\r\n                    translateValue.value = slideUp(slideDistance);\r\n                }\r\n            );\r\n\r\n            expect(result.success).toBe(true);\r\n            expect(result.error).toBeUndefined();\r\n        });\r\n\r\n        test('slideDown should animate translateY to positive value', async () => {\r\n            const translateValue = AnimationTestHelpers.createMockSharedValue(0);\r\n            const slideDistance = 50;\r\n\r\n            const result = await AnimationTestScenarios.testSlideAnimation(\r\n                translateValue,\r\n                slideDistance,\r\n                () => {\r\n                    translateValue.value = slideDown(slideDistance);\r\n                }\r\n            );\r\n\r\n            expect(result.success).toBe(true);\r\n            expect(result.error).toBeUndefined();\r\n        });\r\n    });\r\n\r\n    describe('Complex Animations', () => {\r\n        test('pulse animation should repeat correctly', async () => {\r\n            const scaleValue = AnimationTestHelpers.createMockSharedValue(1);\r\n\r\n            const result = await AnimationTestHelpers.executeAnimationTest(\r\n                'pulse_animation',\r\n                () => {\r\n                    scaleValue.value = pulse(1.2, 1000, 2); // 2 iterations\r\n                },\r\n                {\r\n                    expectedDuration: 2000, // 2 iterations * 1000ms each\r\n                    toleranceMs: 100,\r\n                }\r\n            );\r\n\r\n            expect(result.success).toBe(true);\r\n        });\r\n\r\n        test('shake animation should oscillate correctly', async () => {\r\n            const translateValue = AnimationTestHelpers.createMockSharedValue(0);\r\n\r\n            const result = await AnimationTestHelpers.executeAnimationTest(\r\n                'shake_animation',\r\n                () => {\r\n                    translateValue.value = shake(10, 500, 3); // 3 iterations\r\n                },\r\n                {\r\n                    expectedDuration: 500,\r\n                    toleranceMs: 100,\r\n                }\r\n            );\r\n\r\n            expect(result.success).toBe(true);\r\n        });\r\n    });\r\n\r\n    describe('Animation Validation', () => {\r\n        test('should validate opacity values correctly', () => {\r\n            const opacityValue = AnimationTestHelpers.createMockSharedValue(1);\r\n\r\n            const isValid = AnimationValidators.validateOpacityAnimation(\r\n                opacityValue,\r\n                ANIMATION_VALUES.OPACITY.VISIBLE,\r\n                0.01\r\n            );\r\n\r\n            expect(isValid).toBe(true);\r\n        });\r\n\r\n        test('should validate scale values correctly', () => {\r\n            const scaleValue = AnimationTestHelpers.createMockSharedValue(1);\r\n\r\n            const isValid = AnimationValidators.validateScaleAnimation(\r\n                scaleValue,\r\n                ANIMATION_VALUES.SCALE.NORMAL,\r\n                0.01\r\n            );\r\n\r\n            expect(isValid).toBe(true);\r\n        });\r\n\r\n        test('should validate translation values correctly', () => {\r\n            const translateValue = AnimationTestHelpers.createMockSharedValue(-50);\r\n\r\n            const isValid = AnimationValidators.validateTranslationAnimation(\r\n                translateValue,\r\n                -50,\r\n                1\r\n            );\r\n\r\n            expect(isValid).toBe(true);\r\n        });\r\n\r\n        test('should validate animation duration correctly', () => {\r\n            const isValid = AnimationValidators.validateAnimationDuration(\r\n                305, // actual duration\r\n                300, // expected duration\r\n                10   // tolerance\r\n            );\r\n\r\n            expect(isValid).toBe(true);\r\n        });\r\n\r\n        test('should validate frame rate correctly', () => {\r\n            const isValid = AnimationValidators.validateFrameRate(\r\n                58, // actual FPS\r\n                60, // target FPS\r\n                0.1 // 10% tolerance\r\n            );\r\n\r\n            expect(isValid).toBe(true);\r\n        });\r\n    });\r\n\r\n    describe('Performance Benchmarking', () => {\r\n        test('should benchmark animation performance', async () => {\r\n            const benchmark = await PerformanceBenchmark.benchmarkAnimation(\r\n                'fadeIn_benchmark',\r\n                () => {\r\n                    const opacityValue = AnimationTestHelpers.createMockSharedValue(0);\r\n                    opacityValue.value = fadeIn();\r\n                },\r\n                3, // 3 runs\r\n                {\r\n                    expectedDuration: ANIMATION_DURATIONS.NORMAL,\r\n                }\r\n            );\r\n\r\n            expect(benchmark.averageDuration).toBeGreaterThan(0);\r\n            expect(benchmark.minDuration).toBeGreaterThan(0);\r\n            expect(benchmark.maxDuration).toBeGreaterThan(0);\r\n            expect(benchmark.successRate).toBeGreaterThan(0);\r\n        });\r\n\r\n        test('should compare two animation implementations', async () => {\r\n            const animation1 = () => {\r\n                const value = AnimationTestHelpers.createMockSharedValue(0);\r\n                value.value = fadeIn(200); // faster\r\n            };\r\n\r\n            const animation2 = () => {\r\n                const value = AnimationTestHelpers.createMockSharedValue(0);\r\n                value.value = fadeIn(400); // slower\r\n            };\r\n\r\n            const comparison = await PerformanceBenchmark.compareAnimations(\r\n                'fadeIn_comparison',\r\n                animation1,\r\n                animation2,\r\n                2, // 2 runs each\r\n                {\r\n                    expectedDuration: 300, // average\r\n                }\r\n            );\r\n\r\n            expect(comparison.winner).toBeDefined();\r\n            expect(comparison.improvement).toBeGreaterThanOrEqual(0);\r\n        });\r\n    });\r\n\r\n    describe('Test Utilities', () => {\r\n        test('should create mock SharedValue correctly', () => {\r\n            const mockValue = AnimationTestHelpers.createMockSharedValue(42);\r\n\r\n            expect(mockValue.value).toBe(42);\r\n            expect(mockValue.addListener).toBeDefined();\r\n            expect(mockValue.removeListener).toBeDefined();\r\n            expect(mockValue.modify).toBeDefined();\r\n        });\r\n\r\n        test('should wait for animation completion', async () => {\r\n            const startTime = Date.now();\r\n\r\n            await AnimationTestHelpers.waitForAnimation(100, 50);\r\n\r\n            const endTime = Date.now();\r\n            const duration = endTime - startTime;\r\n\r\n            expect(duration).toBeGreaterThanOrEqual(150); // 100ms + 50ms buffer\r\n        });\r\n    });\r\n\r\n    describe('Mock Timers Integration', () => {\r\n        test('should work with mock timers', () => {\r\n            const mockTimers = TestSetup.setupMockTimers();\r\n\r\n            let completed = false;\r\n            setTimeout(() => {\r\n                completed = true;\r\n            }, 1000);\r\n\r\n            expect(completed).toBe(false);\r\n\r\n            mockTimers.advanceTime(1000);\r\n\r\n            expect(completed).toBe(true);\r\n\r\n            mockTimers.restore();\r\n        });\r\n    });\r\n});\r\n"],"mappings":"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","ignoreList":[]}