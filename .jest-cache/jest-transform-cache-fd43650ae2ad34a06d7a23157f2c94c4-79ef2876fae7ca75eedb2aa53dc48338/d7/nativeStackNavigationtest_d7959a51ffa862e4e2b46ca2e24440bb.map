{"version":3,"names":["_react","_interopRequireDefault","require","_reactTestRenderer","_native","_nativeStack","_jsxRuntime","TestScreen1","jsx","Fragment","TestScreen2","Stack","createNativeStackNavigator","TestNavigator","NavigationContainer","children","jsxs","Navigator","Screen","name","component","describe","beforeEach","console","log","test","ReactTestRenderer","create","expect","toBeTruthy","toBe","stack","toBeDefined","toThrow"],"sources":["nativeStackNavigation.test.tsx"],"sourcesContent":["/**\r\n * Native Stack Navigation Tests\r\n * Verifies Native Stack Navigator functionality after RNGH migration\r\n */\r\nimport React from 'react';\r\nimport ReactTestRenderer from 'react-test-renderer';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n\r\n// Mock components for testing\r\nconst TestScreen1 = () => <></>;\r\nconst TestScreen2 = () => <></>;\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nconst TestNavigator = () => (\r\n  <NavigationContainer>\r\n    <Stack.Navigator>\r\n      <Stack.Screen name=\"Screen1\" component={TestScreen1} />\r\n      <Stack.Screen name=\"Screen2\" component={TestScreen2} />\r\n    </Stack.Navigator>\r\n  </NavigationContainer>\r\n);\r\n\r\ndescribe('Native Stack Navigation', () => {\r\n  beforeEach(() => {\r\n    console.log('[DEBUG_LOG] Starting Native Stack Navigation test');\r\n  });\r\n\r\n  test('creates Native Stack Navigator without errors', () => {\r\n    console.log('[DEBUG_LOG] Testing Native Stack Navigator creation');\r\n\r\n    const component = ReactTestRenderer.create(<TestNavigator />);\r\n    expect(component).toBeTruthy();\r\n\r\n    console.log('[DEBUG_LOG] Native Stack Navigator created successfully');\r\n  });\r\n\r\n  test('Native Stack Navigator is properly imported', () => {\r\n    console.log('[DEBUG_LOG] Testing createNativeStackNavigator import');\r\n\r\n    expect(typeof createNativeStackNavigator).toBe('function');\r\n\r\n    console.log('[DEBUG_LOG] createNativeStackNavigator import verified');\r\n  });\r\n\r\n  test('Stack screens can be configured', () => {\r\n    console.log('[DEBUG_LOG] Testing Stack screen configuration');\r\n\r\n    const stack = createNativeStackNavigator();\r\n    expect(stack.Screen).toBeDefined();\r\n    expect(stack.Navigator).toBeDefined();\r\n\r\n    console.log('[DEBUG_LOG] Stack screen configuration verified');\r\n  });\r\n\r\n  test('verifies RNGH dependency removal', () => {\r\n    console.log('[DEBUG_LOG] Testing RNGH dependency removal');\r\n\r\n    // Verify that we cannot import from react-navigation/stack\r\n    expect(() => {\r\n      // This should not be available since we removed the dependency\r\n      require('@react-navigation/stack');\r\n    }).toThrow();\r\n\r\n    console.log('[DEBUG_LOG] RNGH dependency removal verified');\r\n  });\r\n});\r\n"],"mappings":";;;AAIA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,kBAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,OAAA,GAAAF,OAAA;AACA,IAAAG,YAAA,GAAAH,OAAA;AAA4E,IAAAI,WAAA,GAAAJ,OAAA;AAG5E,IAAMK,WAAW,GAAG,SAAdA,WAAWA,CAAA;EAAA,OAAS,IAAAD,WAAA,CAAAE,GAAA,EAAAF,WAAA,CAAAG,QAAA,IAAI,CAAC;AAAA;AAC/B,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA;EAAA,OAAS,IAAAJ,WAAA,CAAAE,GAAA,EAAAF,WAAA,CAAAG,QAAA,IAAI,CAAC;AAAA;AAE/B,IAAME,KAAK,GAAG,IAAAC,uCAA0B,EAAC,CAAC;AAE1C,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA;EAAA,OACjB,IAAAP,WAAA,CAAAE,GAAA,EAACJ,OAAA,CAAAU,mBAAmB;IAAAC,QAAA,EAClB,IAAAT,WAAA,CAAAU,IAAA,EAACL,KAAK,CAACM,SAAS;MAAAF,QAAA,GACd,IAAAT,WAAA,CAAAE,GAAA,EAACG,KAAK,CAACO,MAAM;QAACC,IAAI,EAAC,SAAS;QAACC,SAAS,EAAEb;MAAY,CAAE,CAAC,EACvD,IAAAD,WAAA,CAAAE,GAAA,EAACG,KAAK,CAACO,MAAM;QAACC,IAAI,EAAC,SAAS;QAACC,SAAS,EAAEV;MAAY,CAAE,CAAC;IAAA,CACxC;EAAC,CACC,CAAC;AAAA,CACvB;AAEDW,QAAQ,CAAC,yBAAyB,EAAE,YAAM;EACxCC,UAAU,CAAC,YAAM;IACfC,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAC;EAClE,CAAC,CAAC;EAEFC,IAAI,CAAC,+CAA+C,EAAE,YAAM;IAC1DF,OAAO,CAACC,GAAG,CAAC,qDAAqD,CAAC;IAElE,IAAMJ,SAAS,GAAGM,0BAAiB,CAACC,MAAM,CAAC,IAAArB,WAAA,CAAAE,GAAA,EAACK,aAAa,IAAE,CAAC,CAAC;IAC7De,MAAM,CAACR,SAAS,CAAC,CAACS,UAAU,CAAC,CAAC;IAE9BN,OAAO,CAACC,GAAG,CAAC,yDAAyD,CAAC;EACxE,CAAC,CAAC;EAEFC,IAAI,CAAC,6CAA6C,EAAE,YAAM;IACxDF,OAAO,CAACC,GAAG,CAAC,uDAAuD,CAAC;IAEpEI,MAAM,CAAC,OAAOhB,uCAA0B,CAAC,CAACkB,IAAI,CAAC,UAAU,CAAC;IAE1DP,OAAO,CAACC,GAAG,CAAC,wDAAwD,CAAC;EACvE,CAAC,CAAC;EAEFC,IAAI,CAAC,iCAAiC,EAAE,YAAM;IAC5CF,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;IAE7D,IAAMO,KAAK,GAAG,IAAAnB,uCAA0B,EAAC,CAAC;IAC1CgB,MAAM,CAACG,KAAK,CAACb,MAAM,CAAC,CAACc,WAAW,CAAC,CAAC;IAClCJ,MAAM,CAACG,KAAK,CAACd,SAAS,CAAC,CAACe,WAAW,CAAC,CAAC;IAErCT,OAAO,CAACC,GAAG,CAAC,iDAAiD,CAAC;EAChE,CAAC,CAAC;EAEFC,IAAI,CAAC,kCAAkC,EAAE,YAAM;IAC7CF,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;IAG1DI,MAAM,CAAC,YAAM;MAEX1B,OAAO,CAAC,yBAAyB,CAAC;IACpC,CAAC,CAAC,CAAC+B,OAAO,CAAC,CAAC;IAEZV,OAAO,CAACC,GAAG,CAAC,8CAA8C,CAAC;EAC7D,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}